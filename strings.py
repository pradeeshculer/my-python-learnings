# -*- coding: utf-8 -*-
"""Strings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MeVzndsep0zGyzhyNkz6njlTq5YxP8-6
"""

'hello'

"This is eg of a string"

print("hello world") #print is used to print the string without quotation

"hello world one"
'hello world two' #Python will print the last string

print("hello world one")
print('hello world two')

print("India \nPakistan")

print("India \n Pakistan") #These are called escape sequences

len("lessgoo")

len("less goo")

string="Less go"

string

string[5]

string[4]

string[-1]

string[-5]

string='abcdef'

string

string[1:] #This is called slicing. It allows us to get a subsection of the string. So when I type 1: , it means that I want all the chars. starting from index no. 1.

string[:2] #It will give the letters upto index 2 but won't include the letter with index no.2

string[3:5] #Starting from 3, upto 5 but don't include the character with index no. 5

string[0:3]

string[::] #Default Step size is 1

string[::2] #Step size is of two

string[::3]

string[0:5:2] #Start from 0, upto 5 but don't include 5, with a step size of 2

string[::-1]

string[::-2]

name="Sam" #We can't reassign an item in a string. This property is called immutability
name[0]="P"

string="Sam"

string1=string[1:]

string1

"P" + string1 #This is called as string concatenation

x="It is"

x + " a beauty"

x = x + " a beauty"

x #Words will keep on repeating the no. of times we keep on running the above cell

lett = "z"

lett * 10 #Words will be repeated n. no of times

let = "beauty"

let * 2

2+3

'2'+'3'

let.upper()

let.split() #Creates a list of strings

str4="Hi bruh"

str4.split()

str4.split('r')

print("Hola {}".format('Pradeesh')) #This is .format() method

print('The {} {} {}'.format('fox','brown','quick')) #The index posn of fox is 0, that of brown & quick is 1 & 2 respectively

print('The {2} {1} {0}'.format('fox','brown','quick'))

print('The {q} {b} {f}'.format(f='fox',b='brown',q='quick')) #Calling them by assigned keywords

result=100/77

print("The results was {}".format(result))

print("The results was {r}".format(r=result))

print("The results was {r:1.5f}".format(r=result)) #1 just adds the space wheareas 7 just passes the 7 places after the decimal

name="Pradeesh"

print("Hello i am {}".format(name))

print(f"Hello i am {name}") #This is called as F Strings

name="Pradeesh"
age=20

print(f"{name} is {age} years old.")

'I like {}'.format('Python rules!')

'Python'.format('rules!')